name: ðŸ“¦ Packing

on:
  workflow_dispatch:
env:
  TCR_URL: ccr.ccs.tencentyun.com
  NAME_SPACE: bite-dance

jobs:
  check-environment:
    name: Check Environment
    runs-on: ubuntu-latest
    steps:
      - name: Check Event
        run: |
          echo "Triggered by: ${{ github.event_name }}"
          echo "Branch: ${{ github.ref }}"
          echo "Repository: ${{ github.repository }}"
  setup-build-publish-deploy:
    needs: check-environment
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Build TCR image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{env.NAME_SPACE}}/${{ github.event.repository.name }}
          tags: latest
          containerfiles: ./Dockerfile

      - name: Push To Tencent Cloud Registry
        id: push-to-tcr
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{env.TCR_URL}}
          username: ${{secrets.TENCENT_REGISTRY_USERNAME}}
          password: ${{secrets.TENCENT_REGISTRY_PASSWORD}}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-tcr.outputs.registry-paths }}"

      - name: Trigger Dokploy Deployment
        uses: benbristow/dokploy-deploy-action@0.0.1
        with:
          auth_token: ${{ secrets.DOKPLOY_AUTH_TOKEN }}
          application_id: ${{ secrets.DOKPLOY_APPLICATION_ID }}
          dokploy_url: ${{ secrets.DOKPLOY_HOST }}
